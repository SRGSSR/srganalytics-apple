//
//  Copyright (c) SRG SSR. All rights reserved.
//
//  License information is available from the LICENSE file.
//

#import <SRGMediaPlayer/SRGMediaPlayer.h>

NS_ASSUME_NONNULL_BEGIN

/**
 *  Additions to `SRGMediaPlayerController` related to analytics
 */
@interface SRGMediaPlayerController (SRGAnalytics)

/**
 *  Same as `-[SRGMediaPlayerController prepareToPlayURL:atTime:withSegments:userInfo:completionHandler:]`, but with an additional
 *  parameter to supply optional analytics labels. These analytics labels are automatically sent in stream events generated by the
 *  player when it plays the media
 *
 *  @param analyticsLabels The analytics labels to send in stream events
 */
- (void)prepareToPlayURL:(NSURL *)URL atTime:(CMTime)time withSegments:(nullable NSArray<id<SRGSegment>> *)segments analyticsLabels:(nullable NSDictionary<NSString *, NSString *> *)analyticsLabels userInfo:(nullable NSDictionary *)userInfo completionHandler:(nullable void (^)(void))completionHandler;

/**
 *  Same as `-[SRGMediaPlayerController playURL:atTime:withSegments:userInfo:]`, but with an additional parameter to supply optional 
 *  analytics labels. These analytics labels are automatically sent in stream events generated by the player when it plays the media
 *
 *  @param analyticsLabels The analytics labels to send in stream events
 */
- (void)playURL:(NSURL *)URL atTime:(CMTime)time withSegments:(nullable NSArray<id<SRGSegment>> *)segments analyticsLabels:(nullable NSDictionary *)analyticsLabels userInfo:(nullable NSDictionary *)userInfo;

/**
 *  Same as `-[SRGMediaPlayerController prepareToPlayURL:atIndex:inSegments:withUserInfo:completionHandler:]`, but with an additional 
 *  parameter to supply optional analytics labels. These analytics labels are automatically sent in stream events generated by the player 
 *  when it plays the media
 *
 *  @param analyticsLabels The analytics labels to send in stream events
 */
- (void)prepareToPlayURL:(NSURL *)URL atIndex:(NSInteger)index inSegments:(NSArray<id<SRGSegment>> *)segments withAnalyticsLabels:(nullable NSDictionary *)analyticsLabels userInfo:(nullable NSDictionary *)userInfo completionHandler:(nullable void (^)(void))completionHandler;

/**
 *  Same as `-[SRGMediaPlayerController playURL:atIndex:inSegments:withUserInfo:]`, but with an additional parameter to supply optional
 *  analytics labels. These analytics labels are automatically sent in stream events generated by the player when it plays the media
 *
 *  @param analyticsLabels The analytics labels to send in stream events
 */
- (void)playURL:(NSURL *)URL atIndex:(NSInteger)index inSegments:(NSArray<id<SRGSegment>> *)segments withAnalyticsLabels:(nullable NSDictionary *)analyticsLabels userInfo:(nullable NSDictionary *)userInfo;

/**
 *  By default, a media player controller is automatically tracked (default value is YES). Set to NO to disable this behavior
 */
@property (nonatomic, getter=isTracked) BOOL tracked;

@end

NS_ASSUME_NONNULL_END
